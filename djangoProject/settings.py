"""
Django settings for djangoProject project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
# settings.py

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-zan-%v2ntl^bgq#1*xd=&ark-wm(nwf^40j)%9+xjf17jygi0o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

# ALLOWED_HOSTS = ['yourdomain.com', 'subdomain.yourdomain.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'search',
    'corsheaders',
    'Final',
    'mongo',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.naver',
]

AUTHENTICATION_BACKENDS = ['allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_PROVIDERS = {
    'naver': {'APP': {
                        'client_id': 'B5O4QSSltDcZo6MbTq6h',
                        'secret': 'rAYKnXp9gx',
                        'key': ''
                }},
}

 # 로그인 화면의 URL을 지정합니다.
LOGIN_URL = 'rss_feed'  # 로그인 화면의 URL을 지정합니다.
LOGIN_REDIRECT_URL = 'main'  # 로그인 후의 기본 리디렉션 URL을 지정합니다.
SOCIALACCOUNT_LOGIN_REDIRECT_URL = 'main'  # 소셜 로그인 후의 리디렉션 URL을 지정합니다.


CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",  # Django 서버 주소
    "https://your-frontend-domain.com",
    "http://127.0.0.1:8000",
    "http://localhost:3000"
    # 다른 허용할 도메인을 필요에 따라 추가
]

APPEND_SLASH = False
X_FRAME_OPTIONS = 'DENY'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'djangoProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    },
    'mongodb': {
        'ENGINE': 'django.db.backends.dummy',  # Use a dummy engine to disable Django's database setup
        'NAME': 'NewsDB',
        'CLIENT': {
            'host': '127.0.0.1',
            'port': 27017,
            'username': 'dainn',
            'password': '0618',
            'authSource': 'news_DB',
            'authMechanism': 'SCRAM-SHA-1',
        },
        'OPTIONS': {
            'serverSelectionTimeoutMS': 5000,  # Timeout in milliseconds for the server selection attempt
        },
    },
}

# django와 pymongo 2개를 같이 사용하기 위해 셋팅한 models.py의 Router 셋팅
DATABASE_ROUTERS = ['Final.models.Router']

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
